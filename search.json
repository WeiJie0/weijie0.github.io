[{"title":"cordova-sqlite-storage 安裝失敗問題","url":"/2021/04/17/CordovaSqliteStroge/","content":"\n今天在維護舊專案要重新 Build 時發現 cordova-sqlite-storage 這個 plugin 一直 Failed to install\n\nFailed to install ‘cordova-sqlite-storage’: CordovaError: Using “requireCordovaModule” to load non-cordova module “q” is not supported.\n\n找了許久的原因終於發現原來是 Cordova 升級至 9.0之後已經不支援該 plugin ，因為 q 模組缺少安全性\n\n\n得知這個問題後，若想快速解決這個問題就是降版至 8.1  npm uninstall cordova -g &amp; npm install cordova@8.1.0 -g但因為還須要維護其他專案，所以就不考慮降版於是繼續尋找解決辦法\n於是在官方的 github 中 issue 發現官方已經有解決這個問題，所以重新安裝 plugin 但還是發現一樣的問題…後來比對了 js 的內容發現 cordova-sqlite-storage/scripts/beforePluginInstall.js  中 已經拿掉 module q 的內容但實際使用 npm 下載卻還是舊版本，於是替換掉程式碼 就順利解決了 了，這邊提供給有相同問題的夥伴們\n將 專案中 plugins/cordova-sqlite-storage/scripts/beforePluginInstall.js 內容改成下列程式碼即可\nconst path = require(&#x27;path&#x27;);const exec = require(&#x27;child_process&#x27;).exec;const packageName = require(&#x27;../package.json&#x27;).name;module.exports = function() &#123;    return new Promise(function(resolve, reject) &#123;        console.log(&#x27;installing external dependencies via npm&#x27;);        console.log(&#x27;for package name: &#x27; + packageName);        exec(&#x27;npm install&#x27;, &#123;                cwd: path.join(&#x27;plugins&#x27;, packageName)            &#125;,            function(error, stdout, stderr) &#123;                if (error !== null) &#123;                    console.log(&#x27;npm install of external dependencies failed with error message: &#x27; + error.message);                    reject();                &#125; else &#123;                    console.log(&#x27;npm install of external dependencies ok&#x27;);                    resolve();                &#125;            &#125;        );    &#125;);&#125;;\n","tags":["Cordova","Cordova-Plugin"]},{"title":"使用 Javascript 取得 RadioButtonList 值","url":"/2021/04/19/JsGetRadioButtonList/","content":"\n    \n\n\n\n今天一如往常寫 C#，但因為要在 onchange 時，ajax 檢查狀態，發現使用 jQuery 對 RadioButtonList 取 .val() 居然是 undefined ?\n\n\n後來打開開發者工具才發現，原來 RadioButtonList 編譯後 Html 居然是 Table 的格式…\n&lt;asp:RadioButtonList ID=&quot;Select_Verify&quot; ClientIDMode=&quot;Static&quot; runat=&quot;server&quot;&gt;    &lt;asp:ListItem Text=&quot;手機號碼&quot; Value=&quot;phone&quot;&gt;&lt;/asp:ListItem&gt;    &lt;asp:ListItem Text=&quot;Email&quot; Value=&quot;Email&quot;&gt;&lt;/asp:ListItem&gt;&lt;/asp:RadioButtonList&gt;\n\n實際編譯出的 HTML 為\n&lt;table id=&quot;Select_Verify&quot; border=&quot;0&quot;&gt;\t&lt;tbody&gt;        &lt;tr&gt;            &lt;td&gt;                &lt;input id=&quot;Select_Verify_0&quot; type=&quot;radio&quot; name=&quot;ctl00$ContentPlaceHolder1$Select_Verify&quot; value=&quot;phone&quot;&gt;                &lt;label for=&quot;Select_Verify_0&quot;&gt;手機號碼&lt;/label&gt;            &lt;/td&gt;            &lt;td&gt;                &lt;input id=&quot;Select_Verify_1&quot; type=&quot;radio&quot; name=&quot;ctl00$ContentPlaceHolder1$Select_Verify&quot; value=&quot;Email&quot;&gt;                &lt;label for=&quot;Select_Verify_1&quot;&gt;Email&lt;/label&gt;            &lt;/td&gt;\t    &lt;/tr&gt;    &lt;/tbody&gt;&lt;/table&gt;\n所以 $(&quot;#Select_Verify&quot;).val() 是操作在 table 上，所以當然是 undefined\n而 Google 上的解決方法，原生 JS 是使用迴圈取值\n&lt;asp:RadioButtonList ID=&quot;RadioButtonList1&quot; runat=&quot;server&quot; onclick=&quot;GetListItem(this)&quot;&gt;    &lt;asp:ListItem&gt;One&lt;/asp:ListItem&gt;    &lt;asp:ListItem&gt;Two&lt;/asp:ListItem&gt;    &lt;asp:ListItem&gt;Three&lt;/asp:ListItem&gt;&lt;/asp:RadioButtonList&gt;\n\nfunction GetListItem(radioButtonList) &#123;    for (var i = 0; i &lt; radioButtonList.rows.length; ++i) &#123;        if (radioButtonList.rows[i].cells[0].firstChild.checked) &#123;            alert(radioButtonList.rows[i].cells[0].firstChild.value);        &#125;    &#125;&#125;\n\n而 jQuery 的解決方式就是使用子元素去取值 ‵$(&#39;#&lt;%=RadioButtonList1.ClientID %&gt; input:checked&#39;).val())\n","tags":["Javascript","ASP.NET"]},{"title":"使用 Canvas 加上浮水印再傳至 ASP.NET (C#)","url":"/2021/04/21/CanvasWatermark/","content":"\n    \n\n\n最近接到一個需求是註冊會員並需要上傳證件供相關單位審核，純粹上傳圖片沒有甚麼問題，但需要再上傳的證件照加上浮水印：「僅供申辦XX會員使用」，目前的系統後端為 ASP. NET 所以做法有兩種：\n\n前端 HTML 使用 Canvas 繪製，再將圖片丟到後端儲存\n使用 asp: UploadFile 上傳到後端再透過 C# 的 Bitmap 加上浮水印\n\n由於再上傳時預覽就需要看到浮水印的效果，所以就只能選擇第一個方案了\n\n\n需求上有三張證件照片要上傳，所以建立三個上傳物件\n&lt;input id=&quot;input_test&quot; type=&quot;file&quot; accept=&quot;image/*&quot; /&gt;&lt;img id=&quot;preview_test&quot; src=&quot;&quot;&gt;\n\naccept=&quot;image/*&quot; 加上這段則是限制僅能上傳圖片項目，一方面則是在 Mobile 上會直接跳出選擇拍照或是從相簿選擇對於使用者體驗上是不錯的選擇。\n而要在網頁上預覽上傳的圖片，需要透過 FileReader 來讀取 File 的資料\n&lt;input id=&quot;input_test&quot; type=&quot;file&quot; accept=&quot;image/*&quot; onchange=&quot;preview(this)&quot; /&gt;\n\nfunction preview() &#123;    let reader = new FileReader();    reader.onload = e =&gt; &#123;        $(&#x27;#preview_test&#x27;).attr(&#x27;src&#x27;, e.target.result);    &#125;    reader.readAsDataURL(input.files[0]);&#125;\n\n宣告一個 FileReader 並將所讀取的檔案 e.target.result 放入 img 標籤的 src 就完成了。\n再來進一步要把圖片加上浮水印：\n首先先宣告一個 image 物件，image 的圖片來源來自於 FileReader.result再宣告一個 canvas 物件將該圖片繪製進入，再寫入文字，最後新增於某一個 div 裡\nfunction preview() &#123;    let reader = new FileReader();    reader.onload = e =&gt; &#123;        let img = new Image();        img.src = reader.result;        img.onload = () =&gt; &#123;            let canvas = document.createElement(&quot;canvas&quot;);            canvas.width = img.width;            canvas.height = img.height;            let ctx = canvas.getContext(&quot;2d&quot;);            ctx.drawImage(img, 0, 0);            ctx.font = &quot;24px 微軟正黑體&quot;;            ctx.fillStyle = &quot;red&quot;;            ctx.textAlign = &quot;right&quot;;            ctx.fillText(                &quot;僅限會員申辦使用&quot;,                canvas.width,                canvas.height / 1.5            );            $(&quot;#canvas_test&quot;).append(canvas);        &#125;    &#125;    reader.readAsDataURL(input.files[0]);&#125;\n\n&lt;input id=&quot;input_test&quot; type=&quot;file&quot; accept=&quot;image/*&quot; onchange=&quot;preview(this)&quot; /&gt;&lt;div id=&quot;canvas_test&quot;&gt;&lt;/div&gt;\n\n\n  See the Pen \n  Upload Image Canvas Preview by wei jie lin  (@weijlin)\n  on CodePen.\n\n\n\n再來就將 canvas 產生的結果丟入後端，我的做法是將加工的圖片轉成 base64 存到 HiddenField 丟到 Click 事件讀取\n&lt;asp: HiddenField ID=&quot;HF_B64&quot; ClientIDMode=&quot;Static&quot; runat=&quot;server&quot; /&gt;\n\n可轉檔圖檔及調整圖片品質(壓縮)\nlet _b64 = canvas.toDataURL(&#x27;image/jpeg&#x27;, 0.5);\n\nC# Base64 格式需移除 Canvas 轉出值前幾碼，否則會被當成無效格式\n$(&quot;#HF_B64&quot;).val(_b64.substr(_b64.indexOf(&#x27;base64,&#x27;) + 7));\n\n後端的部分就抓取 HiddenField 的 Value 再做圖片的轉換儲存\nstring _base64 = HF_B64.Value; System.Drawing.Image _img = Base64StringToImage(_base64); _img.Save(filePath);\n\n以下為 C# Base64 轉圖片的程式碼\npublic static System.Drawing.Image Base64StringToImage(string base64String)    &#123;        byte[] Buffer = Convert.FromBase64String(base64String);        byte[] data = null;        System.Drawing.Image oImage = null;        MemoryStream oMemoryStream = null;        Bitmap oBitmap = null;        data = (byte[])Buffer.Clone();        try        &#123;            oMemoryStream = new MemoryStream(data);            oMemoryStream.Position = 0;            oImage = System.Drawing.Image.FromStream(oMemoryStream);            oBitmap = new Bitmap(oImage);        &#125;        catch        &#123;            throw;        &#125;        finally        &#123;            oMemoryStream.Close();            oMemoryStream.Dispose();            oMemoryStream = null;        &#125;        return oBitmap;    &#125;\n","tags":["ASP.NET","HTML","Canvas"]}]